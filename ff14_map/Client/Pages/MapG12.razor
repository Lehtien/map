@page "/"
@page "/g12"
@inject IJSRuntime JS;
@using ff14_map.Shared
@inject HttpClient Http

<div class="g12">
    <header>
        <h1>【FF14】宝の地図G12 座標探索</h1>
        <p class="caption">宝の地図を楽に探せたらいいなというサイトです。</p>
    </header>
    <br />
    <article>
        <ol>
            <li><strong>［Win］+［Shift］+［S］キーで地図を綺麗に撮影</strong></li>
            <li><strong>［Ctrl］+［V］キーで下の枠内に貼り付け</strong></li>
        </ol>
        <p>
            結果が異なる場合は再度撮影からやり直すと上手くいくかもしれません。<br />
            それでもダメな場合は地図の一覧が載っているサイトで探してください。
        </p>
    </article>

    <strong>ここに貼り付け</strong>
    <div id="inputImage" contenteditable="true" @onpaste="InputImage"></div>
    <img id="outputImage" asp-append-version="true">

    @if (data != null && data.Length != 0)
    {
        <table>
            <tr>
                <th colspan="2" class="underline">候補1</th>
                <th colspan="2" class="underline">候補2</th>
            </tr>
            <tr>
                <td><img class="map" src="@(path + data[0].Map.FileName)" alt="第1候補の地図座標(G12)" asp-append-version="true"></td>
                <td>
                    <p><strong>@data[0].Map.Area</strong></p>
                    <p class="coordinate"><strong>@($"{data[0].Map.Point} ({data[0].Map.X.ToString("F1")}, {data[0].Map.Y.ToString("F1")}) Z:{data[0].Map.Z.ToString("F1")}")</strong></p>
                </td>
                <td><img class="map" src="@(path + data[1].Map.FileName)" alt="第2候補の地図座標(G12)" asp-append-version="true"></td>
                <td>
                    <p><strong>@data[1].Map.Area</strong></p>
                    <p class="coordinate"><strong>@($"{data[1].Map.Point} ({data[1].Map.X.ToString("F1")}, {data[1].Map.Y.ToString("F1")}) Z:{data[1].Map.Z.ToString("F1")}")</strong></p>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <div class="position-relative d-inline-block">
                        <img class="map" src="@(path + data[0].WholeMap.FileName)" alt="第1候補の全体地図(G12)" asp-append-version="true">
                        <span class="circle circle-1"></span>
                    </div>
                </td>
                <td colspan="2">
                    <div class="position-relative d-inline-block">
                        <img class="map" src="@(path + data[1].WholeMap.FileName)" alt="第2候補の全体地図(G12)" asp-append-version="true">
                        <span class="circle circle-2"></span>
                    </div>
                </td>
            </tr>
        </table>
    }
    else if (data != null)
    {
        <p class="err">取得に失敗しました。</p>
    }

    @if (err != null)
    {
        <p class="err">@err</p>
    }

    @if (load)
    {
        <div class="load-wrap bg-gray">
            <div class="load">
                <div class="scaling-squares-spinner">
                    <div class="square"></div>
                    <div class="square"></div>
                    <div class="square"></div>
                    <div class="square"></div>
                </div>
            </div>
        </div>
    }
</div>

<style type="text/css">
    .caption {
        text-indent: 1.5rem;
    }

    table {
        padding-top: 2rem;
        border-collapse: separate;
        border-spacing: 10px 0;
        margin-bottom: 1vw;
        width: 100%;
    }

    td {
        vertical-align: top;
    }

    p {
        width: 100%;
    }

    .coordinate {
        font-size: 1.2rem;
    }

    .underline {
        text-decoration: underline;
    }

    #inputImage {
        border: 3px ridge #8b4513;
        width: auto;
        height: auto;
        max-width: 20vw;
        min-width: 200px;
        min-height: 4vh;
    }

    #outputImage {
        max-width: 320px;
        max-height: 240px;
    }

    img.map {
        min-width: 216px;
    }

    header {
        background-color: #ff8e1e;
        border: 4px solid;
        padding: 3px;
        min-width: 720px;
        min-height: 100px;
    }

    .err {
        position: relative;
        top: 1rem;
        font-size: 1.1rem;
        color: red;
    }

    .circle {
        position: absolute;
        top: 0;
        left: 0;
        display: inline-block;
        width: 4rem;
        height: 4rem;
        border-radius: 50%;
        border: solid 0.2rem red;
        animation: sizeScale 1.3s infinite;
    }

    .circle-1 {
        top: 0;
        left: 0;
    }

    @@keyframes sizeScale {
        from {
            transform: translate(-50%, -50%) scale(1.3);
            opacity: 0;
        }

        to {
            transform: translate(-50%, -50%) scale(1);
            opacity: 1;
        }
    }
</style>

@code {
    private Maps[] data;
    private string path = @"images\map\G12\";
    private string src;
    private string err;
    private bool load = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var jsInProcess = (IJSInProcessRuntime)JS;
            await JS.InvokeVoidAsync("getClipboardImage.focusInput");
        }
    }

    private async Task InputImage()
    {
        load = true;
        await JS.InvokeVoidAsync("getClipboardImage.setImage");
        src = await JS.InvokeAsync<string>("getClipboardImage.getImage");
        if (!string.IsNullOrWhiteSpace(src))
        {
            using var response = await Http.PostAsJsonAsync<string>("G12", src);
            data = await response.Content.ReadFromJsonAsync<Maps[]>();
            if (data.Length != 0)
            {
                await JS.InvokeVoidAsync("getClipboardImage.aim", data[0].Map, data[1].Map);
            }
            err = null;
        }
        else
        {
            data = null;
            err = "*画像の読み込みに失敗しました。(画像が大きい可能性があります。)";
        }
        load = false;
    }
}
